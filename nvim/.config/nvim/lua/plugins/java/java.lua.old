return {
  "mfussenegger/nvim-jdtls",
  enabled = false,
  dependencies = { "williamboman/mason.nvim" },
  ft = { "java" },
  config = function()
    local jdtls = require("jdtls")
    local mason_registry = require("mason-registry")
    local jdtls_path = mason_registry.get_package("jdtls"):get_install_path()
    local lombok_jar = jdtls_path .. "/lombok.jar"

    local config = {
      cmd = {
        "java",
        "-Declipse.application=org.eclipse.jdt.ls.core.id1",
        "-Dosgi.bundles.defaultStartLevel=4",
        "-Declipse.product=org.eclipse.jdt.ls.core.product",
        "-Dlog.protocol=true",
        "-Dlog.level=ALL",
        "-javaagent:" .. lombok_jar,
        "-Xms1g",
        "--add-modules=ALL-SYSTEM",
        "--add-opens",
        "java.base/java.util=ALL-UNNAMED",
        "--add-opens",
        "java.base/java.lang=ALL-UNNAMED",
        "-jar",
        vim.fn.glob(jdtls_path .. "/plugins/org.eclipse.equinox.launcher_*.jar"),
        "-configuration",
        jdtls_path .. "/config_" .. (vim.fn.has("mac") == 1 and "mac" or "linux"),
        "-data",
        vim.fn.stdpath("data") .. "/jdtls/workspace",
      },
      root_dir = jdtls.setup.find_root({ ".git", "mvnw", "gradlew", "pom.xml", "build.gradle" }),
      settings = {
        java = {
          eclipse = {
            downloadSources = true,
          },
          configuration = {
            updateBuildConfiguration = "interactive",
          },
          maven = {
            downloadSources = true,
          },
          implementationsCodeLens = {
            enabled = true,
          },
          referencesCodeLens = {
            enabled = true,
          },
          references = {
            includeDecompiledSources = true,
          },
          inlayHints = {
            parameterNames = {
              enabled = "all",
            },
          },
          format = {
            enabled = true,
            settings = {
              url = vim.fn.expand("~/Workspace/eclipse-java-google-style.xml"),
              profile = "GoogleStyle",
            },
          },
        },
      },
      init_options = {
        bundles = {},
      },
    }

    jdtls.start_or_attach(config)
  end,
}
